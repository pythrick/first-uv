[project]
name = "first-uv"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi[standard]>=0.112.1",
    "uvicorn>=0.30.6",
]

[project.optional-dependencies]
test = [
    "pytest>=8.3.2",
    "httpx>=0.27.0",
    "pytest-asyncio>=0.23.8",
    "pytest-cov>=5.0.0",
    "pytest-dotenv>=0.5.2",
    "pytest-mock>=3.14.0",
]
lint = [
    "ruff>=0.6.1",
    "pre-commit>=3.8.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
pythonpath = [
    "src",
]
asyncio_mode = "auto"
env_files = [".test.env"]
addopts = "-vvv --cov=src --cov-report=term-missing --cov-report=html"

[tool.ruff]
line-length = 88
lint.select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "D", # flake8-docstrings
]
lint.ignore = [
    "B008", # do not perform function calls in argument defaults
    "E501", # line too long
    "E203", # whitespace before ':'
    "C901", # function is too complex
    "D101", # missing docstring in class
    "D105", # missing docstring in magic method
    "D107", # missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
]

[tool.ruff.lint.isort]
known-local-folder = ["tests", "cmd", "src", "pkg"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.bandit]
skips = ["B101", "B601"]
exclude = ["tests", ".venv"]

[tool.coverage.run]
omit = ["tests/*", ".venv/*", "src/*/__main__.py"]
